[project]
name = "fastapi-sqlalchemy-asyncpg"
version = "0.21.0"
description = "A modern FastAPI application with SQLAlchemy 2.0 and AsyncPG for high-performance async database operations. Features include JWT authentication with Redis token storage, password hashing, connection pooling, data processing with Polars, Rich logging, task scheduling with APScheduler, and Shakespeare datasets integration."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[all]>=0.116.2",
    "pydantic[email]>=2.12.0a1",
    "pydantic-settings>=2.10.1",
    "sqlalchemy>=2.0.43",
    "uvicorn[standard]>=0.36.0",
    "asyncpg>=0.30.0",
    "alembic>=1.16.5",
    "httpx>=0.28.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "uvloop>=0.21.0",
    "httptools>=0.6.4",
    "rich>=14.1.0",
    "pyjwt>=2.10.1",
    "redis>=6.4.0",
    "bcrypt>=4.3.0",
    "polars[pyarrow]>=1.33.1",
    "python-multipart>=0.0.20",
    "fastexcel>=0.15.1",
    "inline-snapshot>=0.29.0",
    "dirty-equals>=0.10.0",
    "polyfactory>=2.22.2",
    "granian>=2.5.4",
    "apscheduler[redis,sqlalchemy]>=4.0.0a6",
    "rotoger",
]

[tool.uv]
dev-dependencies = [
    "ruff>=0.13.1",
    "devtools[pygments]>=0.12.2",
    "pyupgrade>=3.20.0",
    "ipython>=9.5.0",
    "sqlacodegen<=3.1.1",
    "tryceratops>=2.4.1",
    "locust>=2.40.5"

]


[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py313"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.inline-snapshot]
hash-length=15
default-flags=["report"]
default-flags-tui=["create", "review"]
show-updates=false
format-command="ruff format --stdin-filename {filename}"

[tool.inline-snapshot.shortcuts]
review=["review"]
fix=["create","fix"]
